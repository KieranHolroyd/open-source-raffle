{"version":3,"file":"static/webpack/static\\development\\pages\\test.js.5579d0c539b78cf32adf.hot-update.js","sources":["webpack:///./component/Form.js"],"sourcesContent":["\r\nimport React, { Component } from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormGroup from 'react-bootstrap/FormGroup';\r\nimport FormLabel from 'react-bootstrap/FormLabel';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\n\r\nclass FormTest extends Component {\r\n  state = {\r\n    fullName: '',\r\n    picture: \"\",\r\n    desc: \"\",\r\n    daysLeft: \"\",\r\n    numTickets: \"\",\r\n    minTickets: \"\",\r\n  };\r\n  validState = {\r\n  }\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault(),\r\n      alert('A name was submitted: ' + this.state.fullName + \" \" + this.state.picture);\r\n    let userData = {\r\n      \"name\": this.state.fullName,\r\n      \"picture\": this.state.picture,\r\n      \"desc\": this.state.desc,\r\n      \"daysLeft\": this.state.daysLeft,\r\n      \"numTickets\": this.state.numTickets,\r\n      \"minTickets\": this.state.minTickets\r\n    };\r\n    // const fetchURL = await fetch('http://localhost:8080/api/raffle/create', {\r\n    //   method: 'POST',\r\n    //   body: JSON.stringify(userData),\r\n    //   headers: {\r\n    //     'Accept': 'application/json',\r\n    //     'Content-Type': 'application/json'\r\n    //   }\r\n    // })\r\n    // this.setState({\r\n    //   name: \"\",\r\n    //   picture: \"\",\r\n    //   desc: \"\",\r\n    //   daysLeft: \"\",\r\n    //   numTickets: \"\",\r\n    //   minTickets: \"\",\r\n    // });\r\n    console.log(userData)\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Card bg=\"light\" style={{ padding: \"40px\" }}>\r\n          <Card body>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup id=\"fullName\">\r\n                    <FormLabel style={{ fontSize: \"20px\" }}>Name:</FormLabel>\r\n                    <FormControl type=\"text\" name=\"fullName\" style={{ borderColor: \"Gray\", borderWidth: \"2px\" }} placeholder=\"Name\" value={this.state.name} onChange={this.handleChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <br />\r\n                <Col>\r\n                  <FormGroup id=\"picture\">\r\n                    <FormLabel style={{ fontSize: \"20px\" }}>Picture: </FormLabel>\r\n                    <FormControl type=\"text\" name=\"picture\" style={{ borderColor: \"Gray\", borderWidth: \"2px\" }} placeholder=\"Picture URL\" value={this.state.picture} onChange={this.handleChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <br />\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup id=\"desc\">\r\n                    <FormLabel style={{ fontSize: \"20px\" }}>Description:</FormLabel>\r\n                    <FormControl as=\"textarea\" rows=\"8\" name=\"desc\" style={{ borderColor: \"Gray\", borderWidth: \"2px\" }} placeholder=\"Tell us about your product\" value={this.state.desc} onChange={this.handleChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <br />\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup id=\"daysLeft\">\r\n                    <FormLabel style={{ fontSize: \"20px\" }}> Raffle Days:</FormLabel>\r\n                    <FormControl type=\"text\" name=\"daysLeft\" style={{ borderColor: \"Gray\", borderWidth: \"2px\" }} placeholder=\"How many days will the Raffle run?\" value={this.state.daysLeft} onChange={this.handleChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <br />\r\n                <Col>\r\n                  <FormGroup id=\"numTickets\">\r\n                    <FormLabel style={{ fontSize: \"20px\" }}>Tickets Offered: </FormLabel>\r\n                    <FormControl type=\"text\" name=\"numTickets\" style={{ borderColor: \"Gray\", borderWidth: \"2px\" }} placeholder=\"How many tickets will be offered?\" value={this.state.numTickets} onChange={this.handleChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <br />\r\n                <Col>\r\n                  <FormGroup id=\"minTickets\">\r\n                    <FormLabel style={{ fontSize: \"20px\" }}>Minimum Tickets Sold: </FormLabel>\r\n                    <FormControl type=\"text\" name=\"minTickets\" style={{ borderColor: \"gray\", borderWidth: \"2px\" }} placeholder=\"Min tickets sold for Raffle to run?\" value={this.state.minTickets} onChange={this.handleChange} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <br />\r\n              <Button variant=\"primary\" size=\"lg\" style={{ width: \"250px\", float: \"right\", fontSize: \"24px\", textAlign: \"center\" }} type=\"submit\" value=\"Submit\">POST RAFFLE</Button>\r\n            </Form>\r\n          </Card>\r\n        </Card>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default FormTest; "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AA4BA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA1GA;AACA;AA4GA;;;;A","sourceRoot":""}